/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	cyberarkv1alpha1 "github.com/clbiggs/cyberark-to-k8s/pkg/k8s/apis/cyberark/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// CyberArkLister helps list CyberArks.
// All objects returned here must be treated as read-only.
type CyberArkLister interface {
	// List lists all CyberArks in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*cyberarkv1alpha1.CyberArk, err error)
	// CyberArks returns an object that can list and get CyberArks.
	CyberArks(namespace string) CyberArkNamespaceLister
	CyberArkListerExpansion
}

// cyberArkLister implements the CyberArkLister interface.
type cyberArkLister struct {
	listers.ResourceIndexer[*cyberarkv1alpha1.CyberArk]
}

// NewCyberArkLister returns a new CyberArkLister.
func NewCyberArkLister(indexer cache.Indexer) CyberArkLister {
	return &cyberArkLister{listers.New[*cyberarkv1alpha1.CyberArk](indexer, cyberarkv1alpha1.Resource("cyberark"))}
}

// CyberArks returns an object that can list and get CyberArks.
func (s *cyberArkLister) CyberArks(namespace string) CyberArkNamespaceLister {
	return cyberArkNamespaceLister{listers.NewNamespaced[*cyberarkv1alpha1.CyberArk](s.ResourceIndexer, namespace)}
}

// CyberArkNamespaceLister helps list and get CyberArks.
// All objects returned here must be treated as read-only.
type CyberArkNamespaceLister interface {
	// List lists all CyberArks in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*cyberarkv1alpha1.CyberArk, err error)
	// Get retrieves the CyberArk from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*cyberarkv1alpha1.CyberArk, error)
	CyberArkNamespaceListerExpansion
}

// cyberArkNamespaceLister implements the CyberArkNamespaceLister
// interface.
type cyberArkNamespaceLister struct {
	listers.ResourceIndexer[*cyberarkv1alpha1.CyberArk]
}
